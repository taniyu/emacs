#name : quick_sort
# --
void quick_sort(${1:int} a[], int n)
{
  quick_sort_1(a, 0, n-1);
}

void quick_sort_1($1 a[], int l, int r)
{
  int v;

  if (l >= r) { return; }

  v = partition(a, l, r);
  quick_sort_1(a, l, v-1);
  quick_sort_1(a, v+1, r);
}

int partition($1 a[], int l, int r)
{
  int i, j;
  $1 t, pivot;
  i = l - 1;
  j = r;
  pivot = a[r];
  for (;;) {
    while (a[++i] < pivot);
    while (i < --j && pivot < a[j]);
    if (i >= j) { break; }
    t = a[i]; a[i] = a[j]; a[j] = t;
  }
  t = a[i]; a[i] = a[r]; a[r] = t;
  return i;
}
